<launch>
    <!-- If you want to generate a ROS bag with the recorded simulated data, set this flag to true -->
    <arg name="record" default="false"/>

    <!-- Start the a underwater world simulation scenario -->
    <arg name="paused" default="true"/>
    <arg name="gui" default="false"/>

    <include file="$(find uuv_gazebo_worlds)/launch/auv_underwater_world.launch"/>

    <!--include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/-->

    <!-- Add the MUR vehicle to the simulation (namespace: mur) -->
    <include file="$(find mur_description)/launch/upload_mur.launch">
        <arg name="x" default="0.0"/>
        <arg name="y" default="0.0"/>
        <arg name="z" default="0.0"/>
        <arg name="yaw" default="0"/>
        <arg name="mode" default="5"/>
        <arg name="namespace" default="mur"/>
    </include>

    <!-- Start the sensors-->
    <arg name="uuv_name" value="mur"/>
    <arg name="model_name" value="mur"/>
    <group ns="$(arg uuv_name)">
        <node pkg="mur_control" type="mur_barometer_parse.py" name="mur_barometer_parse" output="screen"></node>
        <node pkg="mur_control" type="mur_control_mixer.py" name="mur_control_mixer" output="screen"></node>
    </group>

    <!-- Start the recording node  -->
    <include file="$(find mur_control)/launch/record_demo.launch">
      <arg name="record" value="$(arg record)"/>
    </include>

    <!-- Open RViz for visualization of sensor data and visualization markers -->
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find mur_control)/rviz/controller_demo.rviz"/>

</launch>
