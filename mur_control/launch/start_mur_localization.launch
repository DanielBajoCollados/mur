<launch>
  <!-- ROBOT SONAR BROADCASTER -->
  <!-- run laserscan_to_pointcloud node -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

      <remap from="cloud_in" to="/tritech_micron/scan"/>
      <remap from="scan" to="/mur/sonar"/>
      <rosparam>
          target_frame: sonar # Leave disabled to output scan in pointcloud frame
          transform_tolerance: 0.01
          min_height: 0.0
          max_height: 5.0

          angle_min: -1.5708 # -M_PI/2
          angle_max: 1.5708 # M_PI/2
          angle_increment: 0.1256 # M_PI/360.0
          scan_time: 0.3333
          range_min: 0.1
          range_max: 4.0
          use_inf: true

          # Concurrency level, affects number of pointclouds queued for processing and number of threads used
          # 0 : Detect number of cores
          # 1 : Single threaded
          # 2->inf : Parallelism level
          concurrency_level: 1
      </rosparam>

  </node>
  <!-- LASER SCAN MATCHER -->
  <!--node pkg="laser_scan_matcher" type="laser_scan_matcher_node"  name="laser_scan_matcher_node" output="screen">
    <param name="fixed_frame" value="world"/>
    <param name="base_frame" value="base_link"/>
    <param name="use_odom" value="false"/>
    <param name="use_vel" value="false"/>
    <param name="publish_tf" value="false"/>
    <param name="publish_pose" value="false"/>
    <param name="publish_pose_stamped" value="true"/>
    <remap from="cloud" to="/tritech_micron/scan"/>
    <remap from="/imu/data" to="/mavros/imu/data"/>
  </node-->
  <!--node pkg="mur_control" type="mur_pose2d_parse.py" name="mur_pose2d_parse" output="screen">
  </node-->
  <!-- EKF LOCALIZATION -->
  <!--node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
      <rosparam command="load" file="$(find mur_control)/config/ekf_template.yaml" />
      <remap from="odometry/filtered" to="mur/odom_filtered"/>
  </node-->
</launch>
