<launch>
    <!-- If you want to generate a ROS bag with the recorded simulated data, set this flag to true -->
    <arg name="record" default="false"/>

    <!-- Start the a underwater world simulation scenario -->
    <include file="$(find uuv_descriptions)/launch/ocean_waves.launch"/>

    <!-- Add the MUR vehicle to the simulation (namespace: mur) -->
    <include file="$(find mur_description)/launch/upload_mur.launch">
        <arg name="x" default="5"/>
        <arg name="y" default="-2"/>
        <arg name="z" default="-94.5"/>
        <arg name="yaw" default="0"/>
        <arg name="mode" default="sitl"/>
        <arg name="namespace" default="mur"/>
    </include>

    <!-- PX4 config
    <arg name="interactive" default="true"/>
    <arg name="px4_path" default="/home/juanscelyg/src/pixhawk_sitl/Firmware"/>
    <arg unless="$(arg interactive)" name="px4_command_arg1" value="-d"/>
    <arg     if="$(arg interactive)" name="px4_command_arg1" value=""/>-->
    <!-- PX4 node
    <node name="sitl" pkg="px4" type="px4" output="screen"
        args="$(arg px4_path)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS $(arg px4_command_arg1)" required="true"/>-->

    <!-- MAVROS config -->
    <arg name="fcu_url" default="udp://:14550@localhost:14556"/>
    <arg name="respawn_mavros" default="false"/>
    <!-- MAVROS Laumch -->
    <include file="$(find mavros)/launch/px4.launch">
        <!-- GCS link is provided by SITL -->
        <arg name="gcs_url" value=""/>
        <arg name="fcu_url" value="$(arg fcu_url)"/>
        <arg name="respawn_mavros" value="$(arg respawn_mavros)"/>
    </include>

    <!-- Start the recording node
    <include file="$(find mur_control)/launch/record_demo.launch">
      <arg name="record" value="$(arg record)"/>
    </include>-->

    <!-- Open RViz for visualization of sensor data and visualization markers-->
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find mur_control)/rviz/controller_demo.rviz"/>


    <!--
    You can run this demo as

    >> roslaunch uuv_tutorial_dp_controller start_tutorial_dp_controller_demo.launch

    and you can then send some waypoints to the vehicle to see it working

    >> roslaunch uuv_control_utils send_waypoints_file.launch uuv_name:=rexrov
    -->
</launch>
